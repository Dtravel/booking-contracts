version: 2.1
orbs:
  node: circleci/node@5.0.2
executors:
  docker-executor:
    docker:
      - image: public.ecr.aws/p5h0u5q6/node-sonar:1.0.0
    resource_class: medium+
commands:
  code-analysis:
    steps:
      - run:
          name: "Sonarqube scanner"
          command: |
            if [ $CIRCLE_BRANCH == dev ]; then sonar-scanner \
              -Dsonar.projectKey=dTravel_$CIRCLE_PROJECT_REPONAME\
              -Dsonar.sources=. \
              -Dsonar.host.url=$HOST_URL \
              -Dsonar.login=$SONAR_LOGIN \
              -Dsonar.javascript.lcov.reportPaths=./reports/coverage/lcov.info \
              -Dsonar.coverage.exclusions='src/main.ts,src/common/**/*.*,test/*.*,src/**/*.spec.ts'; fi
jobs:
  run-test:
    executor:
      name: node/default
      tag: '16.15.1'
    steps:
      - checkout
      - node/install-packages:
          check-cache: always
          pkg-manager: yarn-berry
          with-cache: true
      - run:
          name: Test contracts
          command: npx hardhat test
  run-coverage:
    executor:
      name: node/default
      tag: '16.15.1'
    steps:
      - checkout
      - node/install-packages:
          check-cache: always
          pkg-manager: yarn-berry
          with-cache: true
      - run:
          name: Test coverage
          command: npx hardhat clean && npx hardhat coverage
      - store_artifacts:
          path: reports/coverage
  run-sonar:
    executor: docker-executor
    steps:
      - checkout
      # - setup-environment
      # - install-engine
      - code-analysis
workflows:
  test-and-coverage:
    jobs:
      - run-test
      - run-coverage:
          requires:
            - run-test
      - run-sonar:
          context:
            - ecr-dev
          requires:
            - run-coverage